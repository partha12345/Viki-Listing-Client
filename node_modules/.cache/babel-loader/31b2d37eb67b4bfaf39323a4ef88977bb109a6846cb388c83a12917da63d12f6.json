{"ast":null,"code":"import { createSlice, createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\nimport { apiSlice } from \"../../app/apiSlice\";\nconst newsData = createEntityAdapter({});\nconst initialState = newsData.getInitialState();\nexport const extendedNewsApiSlice = apiSlice.injectEndpoints({\n  endpoints: builder => ({\n    getArticle: builder.query({\n      query: () => '/api/news1s',\n      transformResponse: ResponseData => {\n        console.log(ResponseData);\n        return newsData.setAll(initialState, ResponseData.data);\n      },\n      providesTags: (result, error, arg) => [{\n        type: 'Article',\n        id: 'LIST'\n      }]\n    })\n  })\n});\nexport const {\n  useGetArticleQuery\n} = extendedNewsApiSlice;\nexport const fetchedNews = extendedNewsApiSlice.endpoints.getArticle.select();\nconst alteredfetchedNews = createSelector(fetchedNews, response => response.data);\nexport const {\n  selectAll: selectAllNews,\n  selectById: selectNewsById,\n  selectIds: selectNewsIds\n} = newsData.getSelectors(state => {\n  var _alteredfetchedNews;\n  return (_alteredfetchedNews = alteredfetchedNews(state)) !== null && _alteredfetchedNews !== void 0 ? _alteredfetchedNews : initialState;\n});","map":{"version":3,"names":["createSlice","createEntityAdapter","createSelector","apiSlice","newsData","initialState","getInitialState","extendedNewsApiSlice","injectEndpoints","endpoints","builder","getArticle","query","transformResponse","ResponseData","console","log","setAll","data","providesTags","result","error","arg","type","id","useGetArticleQuery","fetchedNews","select","alteredfetchedNews","response","selectAll","selectAllNews","selectById","selectNewsById","selectIds","selectNewsIds","getSelectors","state","_alteredfetchedNews"],"sources":["/home/kishore/Documents/kishore/viki/Viki-Listing-Client/src/features/News/newsApiSlice.js"],"sourcesContent":["import { createSlice ,createEntityAdapter, createSelector } from \"@reduxjs/toolkit\";\nimport { apiSlice } from \"../../app/apiSlice\";\n\n\n\nconst newsData = createEntityAdapter({})\n\nconst initialState = newsData.getInitialState()\n\n\nexport const extendedNewsApiSlice = apiSlice.injectEndpoints({\n    endpoints:builder => ({\n        getArticle:builder.query({\n            query:() => '/api/news1s',\n            transformResponse: ResponseData => {  \n                console.log(ResponseData)             \n                return newsData.setAll(initialState,ResponseData.data)\n            },\n            providesTags:(result , error , arg) => [\n                {type:'Article' , id:'LIST'}\n            ]\n        })      \n    })\n})\n\nexport const {\n   useGetArticleQuery\n} = extendedNewsApiSlice\n\n\nexport const fetchedNews = extendedNewsApiSlice.endpoints.getArticle.select()\n\nconst alteredfetchedNews  = createSelector(\n    fetchedNews,\n    response => response.data\n)\n\n\nexport const {\n    selectAll:selectAllNews,\n    selectById:selectNewsById,\n    selectIds:selectNewsIds\n} = newsData.getSelectors(state => alteredfetchedNews(state) ?? initialState )"],"mappings":"AAAA,SAASA,WAAW,EAAEC,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACnF,SAASC,QAAQ,QAAQ,oBAAoB;AAI7C,MAAMC,QAAQ,GAAGH,mBAAmB,CAAC,CAAC,CAAC,CAAC;AAExC,MAAMI,YAAY,GAAGD,QAAQ,CAACE,eAAe,CAAC,CAAC;AAG/C,OAAO,MAAMC,oBAAoB,GAAGJ,QAAQ,CAACK,eAAe,CAAC;EACzDC,SAAS,EAACC,OAAO,KAAK;IAClBC,UAAU,EAACD,OAAO,CAACE,KAAK,CAAC;MACrBA,KAAK,EAACA,CAAA,KAAM,aAAa;MACzBC,iBAAiB,EAAEC,YAAY,IAAI;QAC/BC,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC;QACzB,OAAOV,QAAQ,CAACa,MAAM,CAACZ,YAAY,EAACS,YAAY,CAACI,IAAI,CAAC;MAC1D,CAAC;MACDC,YAAY,EAACA,CAACC,MAAM,EAAGC,KAAK,EAAGC,GAAG,KAAK,CACnC;QAACC,IAAI,EAAC,SAAS;QAAGC,EAAE,EAAC;MAAM,CAAC;IAEpC,CAAC;EACL,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,MAAM;EACVC;AACH,CAAC,GAAGlB,oBAAoB;AAGxB,OAAO,MAAMmB,WAAW,GAAGnB,oBAAoB,CAACE,SAAS,CAACE,UAAU,CAACgB,MAAM,CAAC,CAAC;AAE7E,MAAMC,kBAAkB,GAAI1B,cAAc,CACtCwB,WAAW,EACXG,QAAQ,IAAIA,QAAQ,CAACX,IACzB,CAAC;AAGD,OAAO,MAAM;EACTY,SAAS,EAACC,aAAa;EACvBC,UAAU,EAACC,cAAc;EACzBC,SAAS,EAACC;AACd,CAAC,GAAG/B,QAAQ,CAACgC,YAAY,CAACC,KAAK;EAAA,IAAAC,mBAAA;EAAA,QAAAA,mBAAA,GAAIV,kBAAkB,CAACS,KAAK,CAAC,cAAAC,mBAAA,cAAAA,mBAAA,GAAIjC,YAAY;AAAA,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}